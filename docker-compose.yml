version: '3.8'

services:
  postgres-movies:
    image: postgres:15
    container_name: postgres-movies
    restart: always
    environment:
      POSTGRES_USER: app_user
      POSTGRES_PASSWORD: password
    ports:
      - "5432:5432"
    volumes:
      - ./db_init_cinema.sql:/docker-entrypoint-initdb.d/db_init_cinema.sql:ro
    networks:
      - mtbsnet

  postgres-users:
    image: postgres:15
    container_name: postgres-users
    restart: always
    environment:
      POSTGRES_USER: app_user
      POSTGRES_PASSWORD: password
    ports:
      - "5433:5432"
    volumes:
      - ./db_init_users.sql:/docker-entrypoint-initdb.d/db_init_users.sql:ro
    networks:
      - mtbsnet

  movies-service:
    build:
      context: ./movies
    container_name: movies-service
    ports:
      - "8081:8080"
    depends_on:
      - postgres-movies
    environment:
      SPRING_DATASOURCE_URL: jdbc:postgresql://postgres-movies:5432/mtbs
      SPRING_DATASOURCE_USERNAME: app_user
      SPRING_DATASOURCE_PASSWORD: password
      SPRING_JPA_HIBERNATE_DDL_AUTO: none
    networks:
      - mtbsnet

  usermanagement-service:
    build:
      context: ./usermanagement
    container_name: usermanagement-service
    ports:
      - "8082:8080"
      - "5005:5005"
    depends_on:
      - postgres-users
    environment:
      SPRING_DATASOURCE_URL: jdbc:postgresql://postgres-users:5432/users
      SPRING_DATASOURCE_USERNAME: app_user
      SPRING_DATASOURCE_PASSWORD: password
      SPRING_JPA_HIBERNATE_DDL_AUTO: none
      JAVA_OPTS: -Xdebug -Xrunjdwp:server=y,transport=dt_socket,address=5005,suspend=y
    networks:
      - mtbsnet

volumes:
  pgdata:

networks:
  mtbsnet:
